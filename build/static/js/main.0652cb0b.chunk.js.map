{"version":3,"sources":["assets/edit.svg","components/utils.ts","components/Spinner.tsx","components/EventsList.tsx","components/Event.tsx","components/AddEvent.tsx","components/EditEvent.tsx","components/App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","baseURI","URI","CREATE","READ","UPDATE","DELETE","Spinner","props","className","classname","EventsList","deleteEvent","id","axios","delete","then","response","console","log","catch","error","updatedEvents","state","events","filter","event","_id","setState","spinner","this","setTimeout","get","data","to","style","textDecoration","type","value","sort","a","b","date","localeCompare","time","map","d","Date","year","getFullYear","month","toLocaleString","day","getDate","key","src","require","alt","onClick","title","location","description","Component","BaseEvent","handleInputChange","handleSubmit","success","alert","AddEvent","target","name","preventDefault","newEvent","post","res","enabled","onSubmit","placeholder","max-length","onChange","disabled","EditEvent","match","params","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0652cb0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit.2927f8de.svg\";","const baseURI = \"http://localhost:8080/events/\";\r\n\r\nexport const URI = {\r\n  CREATE: `${baseURI}add/`,\r\n  READ: baseURI,\r\n  UPDATE: `${baseURI}update/`,\r\n  DELETE: `${baseURI}delete/`\r\n};\r\n\r\nexport type SubmitEvent = React.FormEvent<HTMLFormElement>;\r\nexport type InputEvent = React.FormEvent<HTMLInputElement>;\r\n\r\nexport interface Event extends IdInterface {\r\n  title: string;\r\n  date: string;\r\n  time: string;\r\n  location: string;\r\n  description: string;\r\n}\r\n\r\nexport interface IdInterface {\r\n  _id?: string;\r\n}\r\n\r\nexport interface RouteComponentProps {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface EventsListState {\r\n  events: Event[];\r\n  spinner: boolean;\r\n}\r\n\r\nexport interface SpinnerProps {\r\n  classname: string;\r\n}\r\n","import React from \"react\";\r\nimport { SpinnerProps } from \"./utils\";\r\nimport \"../styles/spinner.css\";\r\n\r\nexport const Spinner = (props: SpinnerProps) => (\r\n  <div className={props.classname}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport { Event, URI, EventsListState } from \"./utils\";\r\nimport { Spinner } from \"./Spinner\";\r\nimport \"../styles/events-list.css\";\r\n\r\nclass EventsList extends Component<RouteComponentProps, EventsListState> {\r\n  constructor(props: RouteComponentProps) {\r\n    super(props);\r\n    this.state = { events: [], spinner: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ spinner: true });\r\n    setTimeout(() => {\r\n      axios\r\n        .get(URI.READ)\r\n        .then(response => {\r\n          this.setState({ events: response.data });\r\n        })\r\n        .catch(function(error) {\r\n          console.log(error);\r\n        });\r\n      this.setState({ spinner: false });\r\n    }, 2000);\r\n  }\r\n\r\n  private deleteEvent = (id: string | undefined) => {\r\n    axios\r\n      .delete(URI.DELETE + id)\r\n      .then(response => console.log(response))\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n\r\n    const updatedEvents = this.state.events.filter(event => event._id !== id);\r\n    this.setState({ events: updatedEvents });\r\n  };\r\n\r\n  render() {\r\n    const { events, spinner } = this.state;\r\n\r\n    const sortByDateAndTime = (a: Event, b: Event) =>\r\n      a.date.localeCompare(b.date) || a.time.localeCompare(b.time);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"events-list\">\r\n          <Link to=\"/add\" style={{ textDecoration: \"none\" }}>\r\n            <input type=\"button\" value=\"Add new event\" />\r\n          </Link>\r\n          {spinner ? (\r\n            <Spinner classname=\"spinner\" />\r\n          ) : (\r\n            events.sort(sortByDateAndTime).map((event: Event) => {\r\n              const d = new Date(event.date);\r\n              const year = d.getFullYear();\r\n              const month = d.toLocaleString(\"en-us\", { month: \"short\" });\r\n              const day = d.getDate();\r\n\r\n              return (\r\n                <div key={event._id} className=\"event\">\r\n                  <div className=\"left\">\r\n                    <div className=\"day\">{day}</div>\r\n                    <div className=\"month-year\">\r\n                      {month} {year}\r\n                    </div>\r\n                    <div className=\"time\">{event.time}</div>\r\n                  </div>\r\n                  <div className=\"right\">\r\n                    <div className=\"edit\">\r\n                      <Link to={\"/edit/\" + event._id}>\r\n                        <img\r\n                          className=\"edit\"\r\n                          src={require(\"../assets/edit.svg\")}\r\n                          alt=\"edit\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                    <img\r\n                      className=\"delete\"\r\n                      src=\"https://image.flaticon.com/icons/svg/32/32178.svg\"\r\n                      alt=\"delete\"\r\n                      onClick={() => this.deleteEvent(event._id)}\r\n                    />\r\n\r\n                    <div className=\"content\">\r\n                      <div>\r\n                        <b>{event.title}</b>\r\n                      </div>\r\n                      <div>\r\n                        <i>{event.location}</i>\r\n                      </div>\r\n                      {event.description ? (\r\n                        <div className=\"description\">{event.description}</div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsList;\r\n","import { Component } from \"react\";\r\nimport { RouteComponentProps } from \"./utils\";\r\n\r\nabstract class BaseEvent<I, S, E> extends Component<RouteComponentProps> {\r\n  abstract state: E;\r\n  protected abstract handleInputChange = (event: I) => {};\r\n  protected abstract handleSubmit = (event: S) => {};\r\n\r\n  public success = () => {\r\n    alert(\"Success\");\r\n  };\r\n}\r\n\r\nexport default BaseEvent;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URI, InputEvent, SubmitEvent, Event } from \"./utils\";\r\nimport BaseEvent from \"./Event\";\r\nimport \"../styles/main.css\";\r\nimport \"../styles/form.css\";\r\n\r\nclass AddEvent extends BaseEvent<InputEvent, SubmitEvent, Event> {\r\n  state = {\r\n    title: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    location: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  handleInputChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.setState({\r\n      [target.name]: target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const { title, date, time, location, description } = this.state;\r\n    const newEvent = {\r\n      title,\r\n      date,\r\n      time,\r\n      location,\r\n      description\r\n    };\r\n\r\n    axios.post(URI.CREATE, newEvent).then(res => {\r\n      console.log(res.data);\r\n      this.success();\r\n    });\r\n\r\n    this.setState({\r\n      title: \"\",\r\n      date: \"\",\r\n      time: \"\",\r\n      location: \"\",\r\n      description: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, date, time, location, description } = this.state;\r\n    const enabled = title && date && time;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            max-length=\"15\"\r\n            value={title}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            placeholder=\"Date\"\r\n            value={date}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            type=\"time\"\r\n            name=\"time\"\r\n            placeholder=\"Time\"\r\n            value={time}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            placeholder=\"Location\"\r\n            max-length=\"15\"\r\n            value={location}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Additional info\"\r\n            max-length=\"15\"\r\n            value={description}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input type=\"submit\" disabled={!enabled} value=\"Add event\" />\r\n          {enabled ? null : (\r\n            <div className=\"require\">Title, date and time is required.</div>\r\n          )}\r\n        </form>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <input type=\"button\" value=\"Back\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEvent;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URI, InputEvent, SubmitEvent, Event } from \"./utils\";\r\nimport BaseEvent from \"./Event\";\r\nimport \"../styles/main.css\";\r\nimport \"../styles/form.css\";\r\n\r\nclass EditEvent extends BaseEvent<InputEvent, SubmitEvent, Event> {\r\n  state = {\r\n    _id: \"\",\r\n    title: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    location: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    axios\r\n      .get(URI.READ + id)\r\n      .then(response => {\r\n        const { _id, title, date, time, location, description } = response.data;\r\n        this.setState({\r\n          _id,\r\n          title,\r\n          date,\r\n          time,\r\n          location,\r\n          description\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.setState({\r\n      [target.name]: target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event: SubmitEvent) => {\r\n    event.preventDefault();\r\n    const { title, date, time, location, description } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    const newEvent = {\r\n      title,\r\n      date,\r\n      time,\r\n      location,\r\n      description\r\n    };\r\n\r\n    axios.post(URI.UPDATE + id, newEvent).then(res => {\r\n      console.log(res.data);\r\n      this.success();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, date, time, location, description } = this.state;\r\n    const enabled = title && date && time;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            max-length=\"15\"\r\n            value={title}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            placeholder=\"Date\"\r\n            value={date}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            type=\"time\"\r\n            name=\"time\"\r\n            placeholder=\"Time\"\r\n            value={time}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            placeholder=\"Location\"\r\n            max-length=\"15\"\r\n            value={location}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Additional info\"\r\n            max-length=\"15\"\r\n            value={description}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input type=\"submit\" disabled={!enabled} value=\"Update event\" />\r\n          {enabled ? null : (\r\n            <div className=\"require\">Title, date and time is required.</div>\r\n          )}\r\n        </form>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <input type=\"button\" value=\"Back\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditEvent;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport EventsList from \"./EventsList\";\nimport AddEvent from \"./AddEvent\";\nimport EditEvent from \"./EditEvent\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={EventsList} />\n        <Route path=\"/add\" component={AddEvent} />\n        <Route path=\"/edit/:id\" component={EditEvent} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}